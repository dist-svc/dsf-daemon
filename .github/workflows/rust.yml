name: Rust CI

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master ]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    continue-on-error: true
    
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: Configure caching
        uses: actions/cache@v2
        with:
          key: check
          path: |
            ${{ env.HOME }}/.cargo
            ./target

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

  test:
    name: Test
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - uses: actions/checkout@v2
        
      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Configure caching
        uses: actions/cache@v2
        with:
          key: test
          path: |
            ${{ env.HOME }}/.cargo
            ./target
        
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
    
  build:
    name: Build Binaries
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            output: dsfd
            use_cross: false
          - target: armv7-unknown-linux-gnueabihf 
            os: ubuntu-latest
            output: dsfd
            use_cross: true
          - target: armv7-unknown-linux-musleabihf
            os: ubuntu-latest
            output: dsfd
            use_cross: true
          - target: x86_64-apple-darwin
            os: macos-latest
            output: dsfd

    steps:
    - uses: actions/checkout@v2
    - uses: FranzDiebold/github-env-vars-action@v1
    - name: Configure toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        target:  ${{ matrix.target }}
        override: true

    - name: Install cargo-deb
      if: ${{ matrix.os == 'ubuntu-latest' }}
      uses: actions-rs/install@v0.1
      with:
        crate: cargo-deb
        version: latest

    - name: Install s3-util
      uses: actions-rs/install@v0.1
      with:
        crate: s3-util
        version: latest
    
    - name: Configure caching
      uses: actions/cache@v2
      if: ${{ matrix.os != 'macos-latest' }}
      with:
        key: build-${{ matrix.os }}-${{ matrix.target }}
        path: |
          ${{ env.HOME }}/.cargo
          ./target
    
    - name: Enable cross compilation
      if: ${{ matrix.use_cross }}
      run: |
        echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV

    - name: Build release
      uses: actions-rs/cargo@v1
      with:
        use-cross: ${{ matrix.use_cross }}
        command: build
        args: --release --target ${{ matrix.target }}

    - name: Package deb
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        cargo deb --no-build --target ${{ matrix.target }}
    
    - name: Create archive
      run: tar -cvf target/dsfd-${{ matrix.target }}.tgz -C target/${{ matrix.target }}/release/ ${{ matrix.output }}
      
    - name: Store CI artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dsfd-${{ matrix.target }}
        path: |
          target/dsfd-${{ matrix.target }}.tgz
          target/${{ matrix.target }}/debian/*.deb

    - name: Upload binaries to S3
      run: |
        s3-util upload dsfd-${{ matrix.target }}-${{ github.ref }}.tgz target/dsfd-${{ matrix.target }}.tgz

    - name: Upload deb packages to S3
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        s3-util upload dsfd-${{ matrix.target }}-${{ github.ref }}.deb "target/${{ matrix.target }}/debian/*.deb"
      
    - name: Upload assets to release
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/dsfd-${{ matrix.target }}.tgz
        asset_name: dsfd-${{ matrix.target }}.tgz
        tag: ${{ github.ref }}
        overwrite: true

